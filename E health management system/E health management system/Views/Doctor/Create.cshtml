@model BOL.Doctor
@{
    ViewBag.Title = "Create";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div style="padding:100px 500px">
    <h1>Doctor's Registration Form</h1>

    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
    <fieldset>
        <legend>Doctor</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.Username)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Username)
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Firstname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Firstname)
            @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Lastname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Lastname)
            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Dob)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Dob, new { @type="date" })
            @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Gender)
        </div>
        <div class="col-md-10">
            Male
            @Html.RadioButtonFor(model => model.Gender, "Male")
            Female
            @Html.RadioButtonFor(model => model.Gender, "Female")
            Other
            @Html.RadioButtonFor(model => model.Gender, "Other")
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Address)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address)
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.City)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.City, new List<SelectListItem>
             {
                new SelectListItem() {Text = "Pune", Value="Pune"},
                new SelectListItem() {Text = "Mumbai", Value="Mumbai"},
                new SelectListItem() {Text = "Nagpur", Value="Nagpur"}
            })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.State)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.State, new List<SelectListItem>
             {
                new SelectListItem() {Text = "Maharashtra", Value="Maharashtra"}
            })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Pincode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Pincode)
            @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Mobile)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Mobile)
            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Licence)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Licence)
            @Html.ValidationMessageFor(model => model.Licence, "", new { @class = "text-danger" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Specialization)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Specialization, new List<SelectListItem>
             {
                new SelectListItem() {Text = "Allergist", Value="Allergist"},
                new SelectListItem() {Text = "Cardiologist", Value="Cardiologist"},
                new SelectListItem() {Text = "Dermatologist", Value="Dermatologist"},
                new SelectListItem() {Text = "Physician", Value="Physician"},
                new SelectListItem() {Text = "Neurologist", Value="Neurologist"},
                new SelectListItem() {Text = "Gastroenterologist", Value="Gastroenterologist"},
                new SelectListItem() {Text = "Geriatic", Value="Geriatic"},
                new SelectListItem() {Text = "Gynecologist", Value="Gynecologist"},
                new SelectListItem() {Text = "Pediatrics", Value="Pediatrics"},
                new SelectListItem() {Text = "Surgeon", Value="Surgeon"},
                new SelectListItem() {Text = "Urologist", Value="Urologist"}
            })
            @Html.ValidationMessageFor(model => model.Specialization, "", new { @class = "text-danger" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Certification)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Certification)
            @Html.ValidationMessageFor(model => model.Certification, "", new { @class = "text-danger" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Fees)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Fees, new { @type="number", @class="span4", @min="0"  })
            @Html.ValidationMessageFor(model => model.Fees, "", new { @class = "text-danger" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Experience)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Experience, new { @type = "number", @class = "span4", @min = "0" })
            @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
        </div>
        <div class="editor-label">
            Available From (Timmings)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Checkin, new { @type = "time" })
            @Html.ValidationMessageFor(model => model.Checkin, "", new { @class = "text-danger" })
        </div>
        <div class="editor-label">
            Available To (Timmings)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Checkout, new { @type = "time" })
            @Html.ValidationMessageFor(model => model.Checkout, "", new { @class = "text-danger" })
        </div>
        <br />
        <p>
            <input type="submit" value="Register" />
            <input type="reset" value="Reset" />
        </p>
    </fieldset>
    }
</div>




